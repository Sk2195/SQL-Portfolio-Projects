USE AdventureWorks2019

/* Question 11:
    a. How many employees exist in the Database?

    b. How many of these employees are active employees?

    c. How many Job Titles equal the 'SP' Person type?

	d. How many of these employees are sales people?
 */

--a
SELECT 
      Count(*) AS EmpCNT,
	  COUNT(DISTINCT BusinessEntityID) as EmpCNT,
	  COUNT(Distinct NationalIDNumber) as EmpCNT3
FROM HumanResources.Employee

--b--
Select 
	CurrentFlag
	,Count(*) as EmpCNT
From HumanResources.Employee
Group by CurrentFlag
 
--c--
SELECT 
      Distinct JobTitle
FROM HumanResources.Employee e
INNER JOIN Person.Person p ON p.BusinessEntityID = e.BusinessEntityID
WHERE PersonType = 'SP'
--d--
Select 
	JobTitle
	,Count(Distinct e.BusinessEntityID) as SPCNT
From HumanResources.Employee e
	INNER JOIN Person.Person p on p.BusinessEntityID = e.BusinessEntityID
Where PersonType = 'SP'
Group by JobTitle

--12--
/* Question 12:
a. What is the name of the CEO? Concatenate first and last name.

b. When did this person start working for AdventureWorks

c. Who reports to the CEO? Includes their names and title */

--a--
SELECT
         CONCAT(FirstName, ' ', LastName) As Full_Name
FROM Person.Person p
INNER JOIN HumanResources.Employee e ON p.BusinessEntityID = e.BusinessEntityID
WHERE JobTitle = 'Chief Executive Officer'

--b--
SELECT
         e.HireDate,
		 CONCAT(p.FirstName, ' ', p.LastName) As Full_Name
FROM Person.Person p
INNER JOIN HumanResources.Employee e ON p.BusinessEntityID = e.BusinessEntityID
WHERE JobTitle = 'Chief Executive Officer'

--c--
SELECT
         e.HireDate,
		 e.OrganizationLevel,
		 CONCAT(p.FirstName, ' ', p.LastName) As Full_Name
FROM Person.Person p
INNER JOIN HumanResources.Employee e ON p.BusinessEntityID = e.BusinessEntityID
WHERE JobTitle = 'Chief Executive Officer'

--d--
SELECT
         JobTitle,
		 CONCAT(p.FirstName, ' ', p.LastName) As Full_Name
FROM Person.Person p
INNER JOIN HumanResources.Employee e ON p.BusinessEntityID = e.BusinessEntityID
WHERE OrganizationLevel = 1

/* Question 13
a. What is the job title for John Evans

b. What department does John Evans work in? */

--a-- 
SELECT 
     CONCAT(p.FirstName, ' ', p.LastName) AS FullName,
	 e.JobTitle
FROM HumanResources.Employee e
INNER JOIN Person.Person p ON e.BusinessEntityID = p.BusinessEntityID
WHERE CONCAT(p.FirstName, ' ', p.LastName) = 'John Evans'

--b--
SELECT 
     CONCAT(p.FirstName, ' ', p.LastName) AS FullName,
     d.Name,
     e.JobTitle
FROM HumanResources.Employee e
INNER JOIN HumanResources.EmployeeDepartmentHistory ed ON ed.BusinessEntityID = e.BusinessEntityID
INNER JOIN HumanResources.Department d ON d.DepartmentID = ed.DepartmentID
INNER JOIN Person.Person p ON e.BusinessEntityID = p.BusinessEntityID
WHERE p.FirstName = 'John' AND p.LastName = 'Evans'


/* Question 14
a. Which Purchasing vendors have the highest credit rating?

b. Using a case statement replace the 1 and 0 in Vendor.PreferredVendorStatus to "Preferred" vs "Not Preferred."   How many vendors are considered Preferred?

c. For Active Vendors only, do Preferred vendors have a High or lower average credit rating?

d. How many vendors are active and Not Preferred? */

--a-
SELECT 
      DISTINCT Name,
	  CreditRating
FROM Purchasing.Vendor
ORDER By CreditRating ASC;

--b--
SELECT
     CASE 
         WHEN PreferredVendorStatus = 1 THEN 'Preferred'
         ELSE 'Non-Preferred'
     END AS Vendor_Status,
     COUNT(*) AS Vendor_Count
FROM Purchasing.Vendor
GROUP BY 
     CASE 
         WHEN PreferredVendorStatus = 1 THEN 'Preferred'
         ELSE 'Non-Preferred'
     END

--c--
Select 
	Case when PreferredVendorStatus = '1' Then 'Preferred'
		 Else 'Not Preferred' End as PreferredStatus
	,Avg(Cast(CreditRating as decimal)) as AvgRating
From Purchasing.Vendor
Where ActiveFlag = 1
Group by 
	Case when PreferredVendorStatus = '1' Then 'Preferred'
		 Else 'Not Preferred' End

--d--
Select 
	Count(*) as CNT
From Purchasing.Vendor
Where ActiveFlag = 1 and PreferredVendorStatus = 0

/*Question 15:
Assume today is August 15, 2014.

a. Calculate the age for every current employee. What is the age of the oldest employee?

b. What is the average age by Organization level? Show answer with a single decimal

c. Use the ceiling function to round up

d. Use the floor function to round down */

--a--
WITH age_table AS (
    SELECT
        CONCAT(p.FirstName, ' ', p.LastName) AS Full_Name,
        DATEDIFF(YEAR, e.BirthDate, '2014-08-15') AS Age
    FROM Person.Person p 
    INNER JOIN HumanResources.Employee e ON e.BusinessEntityID = p.BusinessEntityID
)
SELECT
      Full_Name,
	  Age
FROM age_table
WHERE Age = (SELECT MAX(Age) FROM age_table)

--b--
WITH age_table AS (
    SELECT
        CONCAT(p.FirstName, ' ', p.LastName) AS Full_Name,
		e.OrganizationLevel,
        DATEDIFF(YEAR, e.BirthDate, '2014-08-15') AS Age
    FROM Person.Person p 
    INNER JOIN HumanResources.Employee e ON e.BusinessEntityID = p.BusinessEntityID
)
SELECT 
    OrganizationLevel,
    ROUND(AVG(Age), 1) AS avg_age
FROM age_table
GROUP BY OrganizationLevel
ORDER BY 2 DESC;



--c- 
WITH age_table AS (
    SELECT
        e.OrganizationLevel,
        DATEDIFF(YEAR, e.BirthDate, '2014-08-15') AS Age
    FROM Person.Person p 
    INNER JOIN HumanResources.Employee e ON e.BusinessEntityID = p.BusinessEntityID
)
SELECT 
    OrganizationLevel,
    FLOOR(AVG(CAST(Age AS FLOAT))) AS avg_age_floored
FROM age_table
GROUP BY OrganizationLevel;

--16--
/*
Question 16:
a. How many products are sold by AdventureWorks?

b. How many of these products are actively being sold by AdventureWorks?

c. How many of these active products are made in house vs. purchased? */

--a--
SELECT
      COUNT(DISTINCT ProductID) As Product_Name
FROM Production.Product
WHERE FinishedGoodsFlag = 1

--b--
SELECT
      COUNT(DISTINCT ProductID) As Product_Name
FROM Production.Product
WHERE FinishedGoodsFlag = 1 and SellEndDate is NULL


--c--
Select 
	Count(*) as ProductCNT
	,Count(Case When MakeFlag = 0
				Then ProductID
				Else null End) as PurchasedProduct
	,Count(Case When MakeFlag = 1
				Then ProductID
				Else null End) as MadeInHouse
From Production.Product
Where FinishedGoodsFlag = 1
	and SellEndDate is null

--17--
/*
Question 17
We learned in Question 16 that the product table includes a few different type of products - i.e., manufactured vs. purchased.

a. Sum the LineTotal in SalesOrderDetail. Format as currency

b. Sum the LineTotal in SalesOrderDetail by the MakeFlag in the product table. Use a case statement to specify manufactured vs. purchased. Format as currency.

c. Add a count of distinct SalesOrderIDs

d. What is the average LineTotal per SalesOrderID?/

--a--
SELECT FORMAT(SUM(LineTotal), 'C', 'en-US') AS TotalSales
FROM Sales.SalesOrderDetail;

--b--
SELECT 
      CASE 
	      WHEN p.MakeFlag = 1 THEN 'Manufactured'
		      ELSE 'Purchased' END AS MakeFlag,
			  FORMAT(SUM(LineTotal), 'C', 'en-US') AS TotalSales
FROM Sales.SalesOrderDetail sod
INNER JOIN Production.Product p ON p.ProductID = sod.ProductID
GROUP BY p.MakeFlag 

--c--
Select 
	Case When p.MakeFlag = 1 Then 'Manufactured'
		 Else 'Purchased' End as MakeFlag
	,Format(Sum(linetotal),'C0') as LineTotal
	,Format(Count(Distinct sod.SalesOrderID),'N0') as SalesOrderID_CNT
From Sales.SalesOrderDetail sod
	Inner Join Production.Product p on p.ProductID = sod.ProductID
Group by MakeFlag
 
--d--
Select 
	Case When p.MakeFlag = 1 Then 'Manufactured'
		 Else 'Purchased' End as MakeFlag
	,Format(Sum(linetotal),'C0') as LineTotal
	,Format(Count(Distinct sod.SalesOrderID),'N0') as SalesOrderID_CNT
	,Format(Sum(linetotal)/Count(Distinct sod.SalesOrderID),'C0') as AvgLineTotal
From Sales.SalesOrderDetail sod
	Inner Join Production.Product p on p.ProductID = sod.ProductID
Group by MakeFlag


--18--
/* 
Question 18
The AdventureWorks Cyclery database includes historical and present transactions.

a. In the TransactionHistory and TransactionHistoryArchive tables a "W","S", and "P" are used as Transaction types.    What do these abbreviations mean?

b. Union TransactionHistory and TransactionHistoryArchive

c. Find the First and Last TransactionDate in the TransactionHistory and TransactionHistoryArchive tables. Use the union written in part b. The current data type for TransactionDate is datetime. Convert or Cast the data type to date.

d. Find the First and Last Date for each transaction type. Use a case statement to specify the transaction types. */


--a--. 
Select
	t.name as TableName
	,c.name as ColumnName
	,ep.value as Definitions
From sys.extended_properties ep
	INNER JOIN sys.tables t on t.object_id = ep.major_id
	INNER JOIN sys.columns c on c.object_id = ep.major_id
							and c.column_id = ep.minor_id
Where class = 1 
	  and t.name in ('TransactionHistory')
 
--b. 
Select * from Production.TransactionHistoryArchive
Union
Select * from Production.TransactionHistory
 
--c. 
Select  
	Cast(MIN(TransactionDate) as Date) as FirstDate
	,Convert(date,MAX(TransactionDate)) as LastDate
From(
Select * from Production.TransactionHistoryArchive
Union
Select * from Production.TransactionHistory) a
 
--d. 
Select  
	Case When TransactionType = 'W' Then 'WorkOrder'
		 When TransactionType = 'S' Then 'SalesOrder'
		 When TransactionType = 'P' Then 'PurchaseOrder'
		 Else Null End as TransactionType
	,Convert(date,MIN(TransactionDate)) as FirstDate
	,Convert(date,MAX(TransactionDate)) as LastDate
From(
Select * from Production.TransactionHistoryArchive
Union
Select * from Production.TransactionHistory) a
Group by TransactionType

--19--
/* 
Question 19
We learned in Question 18 that the most recent SalesOrder transaction occurred on 2014-06-30 and the First Sales Order transaction occurred on 2011-05-31. 
Does the SalesOrderHeader table show a similar Order date for the first and Last Sale? 
Format as Date *? */

---a--

Select 
	Convert(Date,Min(OrderDate)) as FirstDate
	,Convert(Date,Max(OrderDate)) as LastDate
	--,Format(Max(OrderDate),'D') as LastDate
from Sales.SalesOrderHeader

--20--
/* 
Question 20
We learned in Question 19 that the first and most recent OrderDate in the SalesOrderHeader table matches the Sales Order Dates in the transactionHistory table (Question 18).

a. Find the other tables and dates that should match the WorkOrder and PurchaseOrder Dates. Format these dates as a date in the YYYY-MM-DD format.

b. Do the dates match? Why/Why not? */

--a--
Select 
	Status
	,Convert(date,Min(OrderDate)) as FirstDate --matches the pending status
	,Convert(date,Max(OrderDate)) as LastDate
from Purchasing.PurchaseOrderHeader
Group by Status
 
--b--
Select 
	Convert(date,Min(DueDate)) as FirstDate
	,Convert(date,Max(DueDate)) as LastDate
	,Convert(date,Min(StartDate)) as FirstStartDate --matches TransactionHistory
	,Convert(date,Max(StartDate)) as LastStartDate --matches TransactionHistory
	,Convert(date,Min(EndDate)) as FirstEndDate
	,Convert(date,Max(EndDate)) as LastEndDate
from Production.WorkOrder


